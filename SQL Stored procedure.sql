/* Stored procedures */

/* Add user */
DELIMITER $$

CREATE PROCEDURE AddUser(
IN p_username VARCHAR(255),
IN p_password VARCHAR(255),
IN p_registration_code VARCHAR(255)
)
BEGIN
    INSERT INTO user (username, password, registration_code) VALUE (p_username, p_password, p_registration_code);
END $$

DELIMITER ;

/* Get user by id */
DELIMITER $$

CREATE PROCEDURE GetUserById(
IN p_id INT
)
BEGIN
   SELECT * FROM user WHERE Id = p_id;
END $$

DELIMITER ;

/* Update user */
DELIMITER $$

CREATE PROCEDURE UpdateUser(
IN p_id INT,
IN p_username VARCHAR(255),
IN p_password VARCHAR(255)
)
BEGIN
    Update user
    Set username = p_username, password = p_password
    WHERE Id = p_id;
END $$

DELIMITER ;

/* Add device */
DELIMITER $$

CREATE PROCEDURE AddDevice(
    IN p_registration_code VARCHAR(255),
    OUT p_user_id INT
)
BEGIN
    -- Insert the device
    INSERT INTO device (name, registration_code) VALUES ('new device', p_registration_code);

    -- Fetch the user_id associated with this registration_code
    SELECT Id INTO p_user_id FROM user WHERE registration_code = p_registration_code LIMIT 1;
END $$

DELIMITER ;


/* Get devices */
DELIMITER $$

CREATE PROCEDURE GetDevices(
    IN p_user_id VARCHAR(255)
)
BEGIN
    -- Declare a variable to store the registration code
    DECLARE p_registration_code VARCHAR(255);
    
    -- Get the registration code for the user
    SELECT registration_code INTO p_registration_code 
    FROM user 
    WHERE id = p_user_id;
    
    -- Check if registration code was found
    IF p_registration_code IS NULL THEN
        -- If no registration code is found, return a message or handle it as needed
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'User not found or no registration code associated with user.';
    ELSE
        -- Get devices based on the registration code
        SELECT * FROM device WHERE registration_code = p_registration_code;
    END IF;
END $$

DELIMITER ;



/* Add image */
DELIMITER $$

CREATE PROCEDURE AddImage(
IN p_data LONGBLOB, 
IN p_user_id INT
)
BEGIN
    INSERT INTO image (data, insert_date, user_id) VALUE (p_data, NOW(), p_user_id);
END $$

DELIMITER ;


/* Delete image */
DELIMITER $$

CREATE PROCEDURE DeleteImage(
IN p_id INT 
)
BEGIN
    DELETE FROM image WHERE ID = p_id;
END $$

DELIMITER ;

/* Get image by id */
DELIMITER $$

CREATE PROCEDURE GetImageById(
IN p_id INT
)
BEGIN
   SELECT * FROM image WHERE Id = p_id;
END $$

DELIMITER ;

/* Get all images by id */
DELIMITER $$

CREATE PROCEDURE GetImages(
IN p_user_id INT
)
BEGIN
   SELECT * FROM image WHERE user_id = p_user_id;
END $$

DELIMITER ;


/* Delete images older than 30 days */
DELIMITER $$

CREATE PROCEDURE Delete30DayOld()
BEGIN
    DELETE FROM images
	WHERE date < NOW() - INTERVAL 30 DAY;
END $$

DELIMITER ;

/* Get user by username */
DELIMITER $$

CREATE PROCEDURE GetUserByUsernameuser(
IN p_username varchar(255)
)
BEGIN
 SELECT * FROM user Where username = p_username;
END $$

DELIMITER ;

SET GLOBAL event_scheduler = ON;

CREATE EVENT DeleteOldImagesEvent
ON SCHEDULE EVERY 1 DAY
STARTS CURRENT_DATE + INTERVAL 2 HOUR
DO
CALL Delete30DayOld();

SHOW EVENTS;

call AddImage('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', 1)